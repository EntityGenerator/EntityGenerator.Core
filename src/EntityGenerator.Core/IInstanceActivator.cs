using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace EntityGenerator.Core
{
    /// <summary>
    /// Creates, reads and updates instances of <seealso cref="Type">types</seealso> generated by an <see cref="ITypeGenerator"/>.
    /// </summary>
    public interface IInstanceActivator
    {
        /// <summary>
        /// The generated <seealso cref="Type"/>.
        /// </summary>
        Type GeneratedType { get; }

        /// <summary>
        /// Creates an instances of the generated <seealso cref="Type"/>.
        /// </summary>
        /// <returns>An instance of <seealso cref="Type"/>.</returns>
        object Create();

        /// <summary>
        /// Creates an instances of the generated <seealso cref="Type"/> and casts it to <typeparamref name="TInstance"/>.
        /// </summary>
        /// <typeparam name="TInstance">The <seealso cref="Type"/> that the instance should to be cast to.</typeparam>
        /// <returns>An instance of <seealso cref="Type"/> cast to <typeparamref name="TInstance"/>.</returns>
        TInstance Create<TInstance>();

        /// <summary>
        /// Creates an instances of the generated <seealso cref="Type"/> and sets the provided properties.
        /// </summary>
        /// <param name="setters">A list of <seealso cref="PropertySetter"/> instances containing the values for the properties that should be set while creating the instance.</param>
        /// <returns>An instance of <seealso cref="Type"/> with properties set to the provided values.</returns>
        object Create(params PropertySetter[] setters);

        /// <summary>
        /// Creates an instances of the generated <seealso cref="Type"/>, sets the provided properties and casts it to <typeparamref name="TInstance"/>.
        /// </summary>
        /// <typeparam name="TInstance">The <seealso cref="Type"/> that the instance should to be cast to.</typeparam>
        /// <param name="setters">A list of <seealso cref="PropertySetter"/> instances containing the values for the properties that should be set while creating the instance.</param>
        /// <returns>An instance of <seealso cref="Type"/> with properties set to the provided values and cast to <typeparamref name="TInstance"/>.</returns>
        TInstance Create<TInstance>(params PropertySetter[] setters);

        /// <summary>
        /// Sets the properties of an instance of the generated <seealso cref="Type"/> using the provided values.
        /// </summary>
        /// <param name="instance">An instance of the generated <seealso cref="Type"/>.</param>
        /// <param name="setters">A list of <seealso cref="PropertySetter"/> instances containing the values for the properties that should be set.</param>
        void SetValues(object instance, params PropertySetter[] setters);

        /// <summary>
        /// Gets the property value of an instance of the generated <seealso cref="Type"/>.
        /// </summary>
        /// <param name="instance">An instance of the generated <seealso cref="Type"/>.</param>
        /// <param name="propertyName">The name of the property to read.</param>
        /// <returns>The values of the given property.</returns>
        object GetValue(object instance, string propertyName);

        /// <summary>
        /// Gets the property value of an instance of the generated <seealso cref="Type"/> and casts it to <typeparamref name="TValue"/>.
        /// </summary>
        /// <typeparam name="TValue">The <seealso cref="Type"/> that the value should be cast to.</typeparam>
        /// <param name="instance">An instance of the generated <seealso cref="Type"/>.</param>
        /// <param name="propertyName">The name of the property to read.</param>
        /// <returns>The values of the given property cast to <typeparamref name="TValue"/>.</returns>
        TValue GetValue<TValue>(object instance, string propertyName);
    }
}
